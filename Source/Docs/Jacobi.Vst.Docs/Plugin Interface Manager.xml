<?xml version="1.0" encoding="utf-8"?>
<developerConceptualDocument
  xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
  xmlns:xlink="http://www.w3.org/1999/xlink">

  <!--
  <summary>
    <para>Optional summary abstract</para>
  </summary>
  -->

  <introduction>
    <para>Describe the role of the plugin Interface Manager. Start with the 
    IExtensible interface and its reason for being. Then introduce the 
    interface manager and detail the way the instances for each framework
    interface are acquired. Cover the base class and how to derive from it.
    Talk about the significance of the instance parameter in the CreateXxxxx 
    methods. Perhaps also mention the ExtensibleInterfaceRef class and its 
    place in all this.</para>
  </introduction>

  <!-- Add one or more top-level section elements.  These are collapsible.
       If using <autoOutline /> tag, add an address attribute to identify
       it so that it can be jumped to with a hyperlink. -->
  <section address="Section1">
    <title>Section title</title>
    <content>
      <!-- Uncomment this to create a sub-section outline
      <autoOutline /> -->
      <para>Add one or more sections with content</para>
    </content>
    <!-- If a section contains a sections element, its content creates
         sub-sections.  These are not collapsible.
    <sections>
        <section address="SubSection1">
            <title>Sub-section 1</title>
            <content>
                <para>Sub-section content.</para>
            </content>
        </section>
        <section address="SubSection2">
            <title>Sub-section 2</title>
            <content>
                <para>Sub-section content.</para>
            </content>
        </section>
    </sections> -->
  </section>

  <section address="ClassDiagram">
    <title>Class Diagram</title>
    <content>
      <mediaLink>
        <caption placement="after" lead="Class Diagram">The Plugin Interface Manager</caption>
        <image xlink:href="50f88d51-248a-4c4a-bf58-c0696d339261" />
      </mediaLink>
    </content>
  </section>
  
  <relatedTopics>
    <!-- One or more of the following:
         - A local link
         - An external link
         - A code entity reference

    <link xlink:href="Other Topic's ID"/>
    <link xlink:href="Other Topic's ID">Link inner text</link>

    <externalLink>
        <linkText>Link text</linkText>
        <linkAlternateText>Optional alternate link text</linkAlternateText>
        <linkUri>URI</linkUri>
    </externalLink>

    <codeEntityReference>API member ID</codeEntityReference>

    Examples:

    <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
    <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

    <externalLink>
        <linkText>SHFB on CodePlex</linkText>
        <linkAlternateText>Go to CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SHFB</linkUri>
    </externalLink>

    <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
    <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
    -->
  </relatedTopics>
</developerConceptualDocument>
