<?xml version="1.0" encoding="utf-8"?>
<topic id="1386a1db-aa7f-437f-94d2-a6755e375ea6" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
  <summary>
    <para>Explain the role of the Host Command Stub. Specifically type 
    conversion and calling the host callback function.</para>
  </summary>
  -->
    <introduction>
      <para>The Host Command Stub receives methods calls from the Plugin and 
    relays these to the host using a function pointer passed into the 
    <newTerm>VSTPluginMain</newTerm>
    during the Plugin load sequence. The Host Command Stub converts all data
    types from managed to unmanaged and visa versa (for return values).
    </para>
    </introduction>
    <section address="Implementation">
      <title>Implementation Details</title>
      <content>
        <para>
        The Host Command Stub implements the 
        <codeEntityReference>T:Jacobi.Vst.Core.Plugin.IVstHostCommandStub</codeEntityReference>
        interface. A reference of this interface implementation is passed to the 
        Plugin during the load sequence of the Plugin. The 
        <link xlink:href="a6802bfe-1ae8-444e-abd5-dbe1a348f193" />
        implementation in the 
        <token>framework</token>
        assembly calls this reference of the 
        <codeInline>IVstHostCommandStub</codeInline>
        interface to dispatch its calls to the Host.
        The Host Command Stub class is passed the unmanaged function pointer to
        the Host's dispatch function when it was constructed in the 
        <token>interop</token>
        assembly. So incoming calls from the managed Plugin (
        <link xlink:href="a6802bfe-1ae8-444e-abd5-dbe1a348f193" />
        ) are forwarded to the host using the callback function pointer. Managed 
        types are converted to unmanaged types before passed to the Host and 
        visa versa for return types.
    </para>
      </content>
    </section>
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>